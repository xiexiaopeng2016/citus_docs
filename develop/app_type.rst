.. _app_type:

确定应用程序类型
=======================

在Citus群集上运行高效查询要求数据在机器之间正确分布。这取决于应用程序的类型及其查询模式。

大致有两种应用程序在Citus上运行良好。数据建模的第一步是确定哪种更接近您的应用程序。

概览
----

+----------------------------------------------------------+-------------------------------------------------------+
| 多租户应用程序                                           | 实时应用程序                                          |
+==========================================================+=======================================================+
| 架构中有时会有数十或数百个表                             | 少量的表                                              |
+----------------------------------------------------------+-------------------------------------------------------+
| 一次查询与一个租户（公司/商店)有关的查询                | 具有聚合的相对简单的分析查询                          |
+----------------------------------------------------------+-------------------------------------------------------+
| 用于服务Web客户端的OLTP工作负载                          | 大量不可变数据的高摄取量                              |
+----------------------------------------------------------+-------------------------------------------------------+
| 为每个租户分析查询提供服务的OLAP工作负载                 | 通常以大型活动为中心                                  |
+----------------------------------------------------------+-------------------------------------------------------+

示例和特征
---------------

**多租户应用程序**

  这些通常是为其他公司，帐户或组织提供服务的SaaS应用程序。大多数SaaS应用程序本质上都是关系型的。它们具有在节点之间分配数据的自然维度：只需通过tenant_id进行分片

  Citus使您可以将数据库扩展到数百万租户，而无需重新构建应用程序。您可以保留所需的关系语义，例如连接，外键约束，事务，ACID和一致性。

  * **示例**: 为其他业务托管商店前端的网站，例如数字营销解决方案或销售自动化工具。
  * **特征**: 与单个租户相关的查询，而不是在租户之间加入信息。这包括用于服务Web客户端的OLTP工作负载，以及为每个租户分析查询提供服务的OLAP工作负载。数据库模式中有数十个或数百个表也是多租户数据模型的指标。

  使用Citus扩展多租户应用程序只需要对应用程序代码进行最少的更改。我们支持像Ruby on Rails和Django这样的流行框架。

**实时分析**

  需要大规模并行性的应用程序，协调数百个内核，以便快速获得数字，统计或计数查询。通过在多个节点之间对SQL查询进行分片和并行化，Citus可以在一秒钟内对数十亿条记录执行实时查询。

  * **示例**: 面向客户的分析仪表板，需要亚秒响应时间。
  * **特征**: 少量的表，通常围绕设备-，站点-或用户事件的大表，并且需要高摄取量的大多数不可变数据。相对简单（但计算密集)的分析查询涉及多个聚合和GROUP BY。

如果您的情况类似于上述情况，则下一步是决定如何在Citus群集中对数据进行分片。如概念部分所述，Citus根据表的分发列的散列值将表行分配给分片。数据库管理员选择的分发列需要匹配典型查询的访问模式以确保性能。
